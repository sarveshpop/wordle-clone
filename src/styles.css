/*
  Theme and global variables
*/
html {
  --game-spacing: 8px;
  --header-height: 5rem;

  --color-correct: #538d4e;
  --color-present: #b59f3b;
  --color-absent: #3a3a3c;
  --color-error: #b33525;
  --color-gray-100: hsl(0deg 0% 10%);
  --color-gray-300: #404040;
  --color-gray-500: hsl(0, 0%, 50%);
  --color-gray-700: hsl(0deg 0% 75%);
  --color-gray-900: hsl(0deg 0% 90%);
}

/*
  Custom styles
*/
body {
  font-family: sans-serif;
}

@media (prefers-color-scheme: dark) {
  body {
    background-color: #121213;
    color: #ffffff;
  }

  input {
    background-color: #121213;
    color: white;
  }
}

@media (max-height: 600px) {
  body {
    --game-spacing: 8px;
  }
}

button {
  margin-top: 10px;
  padding: 5px 20px;
  border-radius: 3px;
  border: none;
  background: whitesmoke;
  color: black;
  cursor: pointer;
  text-align: left;
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
}

header {
  display: flex;
  height: var(--header-height);
  border-bottom: 1px solid var(--color-gray-300);
}

header .side {
  width: var(--header-height);
  display: grid;
  place-content: center;
}

h1 {
  flex: 1;
  font-size: 2rem;
  line-height: var(--header-height);
  text-align: center;
}

@media (max-width: 25rem) {
  h1 {
    font-size: 1.25rem;
  }
}

.game-wrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--game-spacing);
  padding: var(--game-spacing) 32px;
  margin: 5% auto;
  width: min-content;
  min-width: 250px;
  max-width: min(500px, 58vh, 100%);
}

.guess-results {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.guess {
  display: flex;
  gap: 4px;
  margin-bottom: 4px;
}

.row {
  display: flex;
  gap: var(--game-spacing);
}

.cell {
  position: relative;
  width: 20%;
  display: grid;
  place-content: center;
  aspect-ratio: 1 / 1;
  border: 2px solid #3a3a3c;
  border-radius: var(--radius);
  font-weight: bold;
  font-size: 2rem;
  user-select: none;
}

/*
  Round the corners for the 4 cells at the very corners of
  the game board
*/
.guess:first-of-type .cell:first-of-type {
  --radius: 4px 0px 0px 0px;
}
.guess:first-of-type .cell:last-of-type {
  --radius: 0px 4px 0px 0px;
}
.guess:last-of-type .cell:last-of-type {
  --radius: 0px 0px 4px 0px;
}
.guess:last-of-type .cell:first-of-type {
  --radius: 0px 0px 0px 4px;
}

.cell.correct {
  background: var(--color-correct);
  border-color: var(--color-correct);
  color: white;
}
.cell.incorrect {
  background: var(--color-absent);
  border-color: var(--color-absent);
  color: white;
}
.cell.misplaced {
  background: var(--color-present);
  border-color: var(--color-present);
  color: white;
}

.guess-input-wrapper {
  display: flex;
  flex-direction: column;
  margin: 2rem 0;
  gap: 8px;
  height: 6.75rem;
}

.guess-input-wrapper label {
  font-size: 1.25rem;
}

.guess-input-wrapper input {
  display: block;
  width: 100%;
  font-size: 2rem;
  border: 2px solid var(--color-gray-300);
  border-radius: 4px;
  padding: 8px 16px;
  outline-offset: 4px;
  text-transform: uppercase;
}
.banner-bg {
  position: absolute;
  background-color: #12121394;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(2px);
}
.banner {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 10px;
  width: 100%;
  height: max-content;
  max-width: 600px;
  margin: 0 auto;
  padding: 40px;
  font-size: 1.25rem;
  animation: slideUp 750ms cubic-bezier(0, 0.72, 0.24, 1.02);
  border-radius: 6px;
  will-change: transform;
  user-select: none;
}

.win.banner {
  background: var(--color-correct);
  color: white;
}
.lose.banner {
  background: var(--color-error);
  color: white;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/*
  Modal styles

  HACK: I'm doing this in a quick and dirty way.
  Later in the course, we'll see my preferred way of building
  modals in React.
*/
[data-reach-dialog-content] {
  position: relative;
  border-radius: 8px;
  padding: 24px 32px;
}
.modal-close-btn {
  position: absolute;
  top: 0;
  right: 0;
  padding: 16px;
  cursor: pointer;
}
.modal-title {
  margin-bottom: 0.5em;
}

/*
  Keyframe animations
*/
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}

.keyboard {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 6px;
}

.keyboard-row {
  display: flex;
  justify-content: center;
  gap: 6px;
}

.keyboard .letter {
  width: 100%;
  height: 100%;
  padding: 1rem 1.5rem;
  border-radius: 4px;
  display: grid;
  place-content: center;
  background: var(--color-gray-500);
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  user-select: none;
}

.keyboard .letter.correct {
  background: var(--color-correct);
  color: white;
}
.keyboard .letter.incorrect {
  background: var(--color-absent);
  color: white;
}
.keyboard .letter.misplaced {
  background: var(--color-present);
  color: white;
}
